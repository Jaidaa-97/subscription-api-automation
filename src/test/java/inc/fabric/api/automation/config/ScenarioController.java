package inc.fabric.api.automation.config;

import io.cucumber.java.Scenario;

import java.io.File;
import java.util.Objects;

public class ScenarioController {

    private static Scenario scenario;
    private static int totalNumberOfScenarios = 0;
    private static int executedScenarioCount = 0;
    private static int failedScenarioCount = 0;

    public static void setScenario(Scenario scenario) {
        ScenarioController.scenario = scenario;
        if (totalNumberOfScenarios == 0) {
            setTotalNumberOfScenarios();
        }

        executedScenarioCount++;
    }

    public static Scenario getScenario() {
        return scenario;
    }

    public static int getExecutedScenarioCount() {
        return executedScenarioCount;
    }

    public static void printInitialLogs() {
        System.out.println("--------------------------------------------------------------------------------");
        System.out.println("************************** Running Now **************************************");
        System.out.println("--------------------------------------------------------------------------------");
        System.out.println("Scenario Number in Current Execution: " + getExecutedScenarioCount() + " / " + totalNumberOfScenarios);
        System.out.println("Scenario Name: " + getScenario().getName());
        System.out.println("Scenario Tags: " + getScenario().getSourceTagNames());
        System.out.println("--------------------------------------------------------------------------------");

    }

    public static void printFinalLogs() {
        if (scenario.isFailed()) {
            failedScenarioCount++;
        }

        System.out.println();
        System.out.println("Suite Execution Summary:");
        System.out.println("Successful / Failed / Total scenarios: "
                + (executedScenarioCount - failedScenarioCount) + " / "  + failedScenarioCount + " / " + totalNumberOfScenarios);
        System.out.println();
    }

    /**
     * Gets the total number of scenarios that will be executed in this suite.
     * It does so by counting the number of files in the /target/parallel/features folder, which are generated by Cucable.
     * If, in the future, we no longer use Cucable this solution will no longer work.
     * In that case, the total number of scenarios <i>should</i> just display as "0" until it is fixed.
     */
    static void setTotalNumberOfScenarios() {
        try {
            totalNumberOfScenarios = Objects.requireNonNull((new File(System.getProperty("user.dir") + "/target/parallel/features")).list()).length;
        } catch (NullPointerException e) {

        }
    }
}
